'use client'

import Link from 'next/link'
import React, { useEffect, useMemo, useState } from 'react'
import Hero from './components/Hero'
import Section from './components/Section'
import { FEATURES, JOBS, MCQ_TESTS, WRITTEN_TESTS, TOPICS, PREVIOUS_SOLVES,  POSTS } from '@/app/data/site'
import { bnDifficulty, formatDate, getCountdown, pillForDifficulty } from './lib/utils'

type Mode = 'MCQ' | 'Written'

// The TimeCell component is defined here as in your code
function TimeCell({ value, label }: { value: number; label: string }) {
  return (
    <div className="flex flex-col items-center rounded-lg border border-slate-800 bg-slate-900 px-3 py-2 min-w-[70px]">
      <div className="text-xl font-extrabold text-slate-50">{value.toString().padStart(2, '0')}</div>
      <div className="text-[11px] text-slate-400">{label}</div>
    </div>
  )
}

export default function Page() {
  const [mode, setMode] = useState<Mode>('MCQ')
  const [activeTopic, setActiveTopic] = useState('math')
  const liveExamDate = useMemo(() => new Date(Date.now() + 1000 * 60 * 60 * 24 * 8 + 1000 * 60 * 20), [])
  const [countdown, setCountdown] = useState(getCountdown(liveExamDate))
  
  // --- THIS IS THE ONLY LOGIC CHANGE ---
  // State to prevent hydration errors from the timer
  const [hasMounted, setHasMounted] = useState(false);
  useEffect(() => {
    setHasMounted(true);
  }, []);
  // --- END OF LOGIC CHANGE ---

  useEffect(() => {
    const t = setInterval(() => setCountdown(getCountdown(liveExamDate)), 1000)
    return () => clearInterval(t)
  }, [liveExamDate])

  return (
    <>
      <Hero />

      {/* Features */}
      <Section id="features" title="‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡ßÅ‡¶§‡¶ø‡¶∞ ‡¶™‡ßÇ‡¶∞‡ßç‡¶£‡¶æ‡¶ô‡ßç‡¶ó ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®" subtitle="‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡¶Ø‡¶º ‡¶ì ‡¶á‡¶û‡ßç‡¶ú‡¶ø‡¶®‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø‡¶Ç ‡¶≠‡¶∞‡ßç‡¶§‡¶ø‡¶ö‡ßç‡¶õ‡ßÅ‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ó‡ßã‡¶õ‡¶æ‡¶®‡ßã ‡¶è‡¶ï‡¶ü‡¶ø ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶ü‡¶´‡¶∞‡ßç‡¶Æ‡•§">
        <div className="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-5 gap-4">
          {FEATURES.map((f) => (
            <div key={f.key} className="group rounded-xl border border-slate-800 bg-slate-900 p-4 hover:shadow-lg transition">
              <div className="text-2xl">{f.emoji}</div>
              <div className="mt-2 font-semibold text-slate-50">{f.title}</div>
              <div className="text-sm text-slate-400">{f.desc}</div>
            </div>
          ))}
        </div>
      </Section>

      {/* Admission Info */}
      <Section id="circulars" title="‡¶≠‡¶∞‡ßç‡¶§‡¶ø ‡¶§‡¶•‡ßç‡¶Ø" subtitle="‡¶∏‡¶ï‡¶≤ ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡¶Ø‡¶º ‡¶ì ‡¶á‡¶û‡ßç‡¶ú‡¶ø‡¶®‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø‡¶Ç ‡¶ó‡ßÅ‡¶ö‡ßç‡¶õ‡ßá‡¶∞ ‡¶≠‡¶∞‡ßç‡¶§‡¶ø ‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶™‡ßç‡¶§‡¶ø ‡¶è‡¶ï ‡¶ú‡¶æ‡¶Ø‡¶º‡¶ó‡¶æ‡¶Ø‡¶º‡•§">
        <div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-4">
          {JOBS.map((job) => (
            <div key={job.id} className="rounded-xl border border-slate-800 bg-slate-900 p-4 hover:shadow-lg transition">
              <div className="flex items-center justify-between">
                <span className={`rounded-md px-2 py-1 text-xs font-bold border ${job.type === 'Engineering' ? 'bg-sky-950 text-sky-300 border-sky-800' : 'bg-indigo-950 text-indigo-300 border-indigo-800'}`}>
                  {job.type === 'Engineering' ? '‡¶á‡¶û‡ßç‡¶ú‡¶ø‡¶®‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø‡¶Ç' : '‡¶™‡¶æ‡¶¨‡¶≤‡¶ø‡¶ï ‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶ø‡¶ü‡¶ø'}
                </span>
              </div>
              <h3 className="mt-2 font-semibold text-slate-50">{job.title}</h3>
              <div className="mt-1 text-sm text-slate-400 flex flex-wrap gap-3">
                <span>üìç {job.location}</span>
                <span>‚è∞ ‡¶Ü‡¶¨‡ßá‡¶¶‡¶® ‡¶∂‡ßá‡¶∑ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ {formatDate(job.deadline)}</span>
              </div>
              <div className="mt-2 flex flex-wrap gap-2">
                {job.tags.map((t) => (
                  <span key={t} className="rounded-full border border-slate-700 bg-slate-800 text-slate-300 px-2 py-1 text-xs font-medium">{t}</span>
                ))}
              </div>
              <div className="mt-4 flex gap-2">
                <button className="btn-secondary">‡¶∏‡¶æ‡¶∞‡ßç‡¶ï‡ßÅ‡¶≤‡¶æ‡¶∞ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®</button>
              </div>
            </div>
          ))}
        </div>
      </Section>

      {/* Practice */}
      <Section id="exams" title="‡¶™‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï‡¶ü‡¶ø‡¶∏ ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ" subtitle="‡¶è‡¶Æ‡¶∏‡¶ø‡¶ï‡¶ø‡¶â/‡¶≤‡¶ø‡¶ñ‡¶ø‡¶§ ‡¶¨‡¶¶‡¶≤‡¶æ‡¶®‡•§ ‡¶∏‡¶Æ‡¶Ø‡¶º‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶ï ‡¶ì ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶æ‡¶≤‡¶ø‡¶ü‡¶ø‡¶ï‡ßç‡¶∏-‡¶∏‡¶π‡•§">
        <div className="inline-flex rounded-lg border border-slate-800 bg-slate-900 p-1">
          <button onClick={() => setMode('MCQ')} className={`px-3 py-2 text-sm font-semibold rounded-md transition-colors ${mode === 'MCQ' ? 'bg-indigo-500 text-white' : 'text-slate-300 hover:bg-slate-800'}`}>‡¶è‡¶Æ‡¶∏‡¶ø‡¶ï‡¶ø‡¶â</button>
          <button onClick={() => setMode('Written')} className={`px-3 py-2 text-sm font-semibold rounded-md transition-colors ${mode === 'Written' ? 'bg-indigo-500 text-white' : 'text-slate-300 hover:bg-slate-800'}`}>‡¶≤‡¶ø‡¶ñ‡¶ø‡¶§</button>
        </div>
        <div className="mt-4 grid sm:grid-cols-2 lg:grid-cols-3 gap-4">
          {(mode === 'MCQ' ? MCQ_TESTS : WRITTEN_TESTS).map((t) => (
            <div key={t.id} className="rounded-xl border border-slate-800 bg-slate-900 p-4 hover:shadow-lg transition">
              <div className="flex items-center justify-between gap-2">
                <h3 className="font-semibold text-slate-50">{t.title}</h3>
                <span className={`text-xs font-bold rounded-full px-2 py-1 border ${pillForDifficulty(t.difficulty)}`}>{bnDifficulty(t.difficulty)}</span>
              </div>
              <p className="mt-1 text-sm text-slate-400">{t.questions}‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‚Ä¢ {t.duration} ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü</p>
              <div className="mt-4 flex gap-2">
                <Link href={`/quiz?quizId=${t.id}`} className="btn-secondary">
                  ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶¶‡¶ø‡¶®
                </Link>
              </div>
            </div>
          ))}
        </div>
      </Section>

      {/* Topic-wise */}
      <Section id="topics" title="‡¶¨‡¶ø‡¶∑‡¶Ø‡¶º‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶ï ‡¶Ö‡¶®‡ßÅ‡¶∂‡ßÄ‡¶≤‡¶®" subtitle="‡¶è‡¶ï‡ßá‡¶ï‡¶ü‡¶æ ‡¶¨‡¶ø‡¶∑‡¶Ø‡¶º‡ßá ‡¶®‡¶ø‡¶ú‡ßá‡¶∞ ‡¶¶‡¶ï‡ßç‡¶∑‡¶§‡¶æ ‡¶ù‡¶æ‡¶≤‡¶ø‡¶Ø‡¶º‡ßá ‡¶®‡¶ø‡¶®‡•§">
        <div className="flex flex-wrap gap-2">
          {TOPICS.map((t) => (
            <button
              key={t.key}
              onClick={() => setActiveTopic(t.key)}
              className={`rounded-full border px-3 py-1.5 text-sm font-semibold transition ${activeTopic === t.key ? 'bg-indigo-950 text-indigo-300 border-indigo-800' : 'border-slate-800 bg-slate-900 text-slate-300 hover:bg-slate-800'}`}
            >
              {t.name}
            </button>
          ))}
        </div>
        <div className="mt-4 rounded-xl border border-slate-800 bg-slate-900 p-4">
          <h3 className="font-semibold text-slate-50">‡¶è‡¶ï‡ßç‡¶∏‡¶™‡¶æ‡¶∞‡ßç‡¶ü‡¶¶‡ßá‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®‡¶∏‡ßá‡¶ü ‚Äî {TOPICS.find(x => x.key === activeTopic)?.name}</h3>
          <ul className="mt-2 list-disc pl-6 text-slate-400">
            <li>‡¶ï‡ßÅ‡¶á‡¶ï ‡¶ü‡ßá‡¶∏‡ßç‡¶ü (‡ßß‡ß´‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‚Ä¢ ‡ßß‡ß® ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü)</li>
            <li>‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶æ‡¶∞‡ßç‡¶° ‡¶Æ‡¶°‡ßá‡¶≤ ‡¶ü‡ßá‡¶∏‡ßç‡¶ü (‡ß©‡ß¶‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‚Ä¢ ‡ß®‡ß´ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü)</li>
            <li>‡¶ö‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶ü‡¶æ‡¶∞ ‡¶´‡¶æ‡¶á‡¶®‡¶æ‡¶≤ (‡ß´‡ß¶‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‚Ä¢ ‡ß™‡ß´ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü)</li>
          </ul>
          <div className="mt-4 flex gap-2">
            <button className="btn-secondary">‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶æ‡¶∞‡ßç‡¶° ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡¶∂‡ßÅ‡¶∞‡ßÅ</button>
            <button className="btn-secondary">‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶á‡¶ú ‡¶ï‡¶∞‡ßÅ‡¶®</button>
          </div>
        </div>
      </Section>

      {/* Live */}
      <Section id="live" title="‡¶≤‡¶æ‡¶á‡¶≠ ‡¶Æ‡¶°‡ßá‡¶≤ ‡¶ü‡ßá‡¶∏‡ßç‡¶ü" subtitle="‡¶π‡¶æ‡¶ú‡¶æ‡¶∞‡ßã ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶≤-‡¶ü‡¶æ‡¶á‡¶Æ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶Ø‡ßã‡¶ó‡¶ø‡¶§‡¶æ‡•§">
        <div className="grid lg:grid-cols-3 gap-4">
          <div className="lg:col-span-2 rounded-xl border border-slate-800 bg-slate-900 p-5">
            <h3 className="font-semibold text-slate-50">BitByBit ‡¶®‡ßç‡¶Ø‡¶æ‡¶∂‡¶®‡¶æ‡¶≤ ‡¶Æ‡¶°‡ßá‡¶≤ ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡ß®‡ß¶‡ß®‡ß®‡ß™</h3>
            <p className="text-sm text-slate-400 mt-1">‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡¶§‡ßá ‡¶¨‡¶æ‡¶ï‡¶ø</p>
            {/* --- THIS IS THE ONLY UI CHANGE --- */}
            <div className="mt-3 flex gap-3">
              {hasMounted ? (
                <>
                  <TimeCell label="‡¶¶‡¶ø‡¶®" value={countdown.days} />
                  <TimeCell label="‡¶ò‡¶£‡ßç‡¶ü‡¶æ" value={countdown.hours} />
                  <TimeCell label="‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü" value={countdown.minutes} />
                  <TimeCell label="‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶°" value={countdown.seconds} />
                </>
              ) : (
                <>
                  {/* Render placeholders on the server and initial client render */}
                  <TimeCell label="‡¶¶‡¶ø‡¶®" value={0} />
                  <TimeCell label="‡¶ò‡¶£‡ßç‡¶ü‡¶æ" value={0} />
                  <TimeCell label="‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü" value={0} />
                  <TimeCell label="‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶°" value={0} />
                </>
              )}
            </div>
            {/* --- END OF UI CHANGE --- */}
            <div className="mt-4 flex gap-2">
              <button className="btn-secondary">‡¶´‡ßç‡¶∞‡¶ø ‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡ßá‡¶∂‡¶®</button>
              <button className="btn-secondary">‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶®‡¶ø‡¶Ø‡¶º‡¶Æ‡¶æ‡¶¨‡¶≤‡¶ø</button>
            </div>
          </div>
          <div className="rounded-xl border border-slate-800 bg-slate-900 p-5">
            <ul className="list-disc pl-5 text-slate-400 space-y-1">
              <li>üß© ‡ßß‡ß¶‡ß¶‡¶ü‡¶ø ‡¶è‡¶Æ‡¶∏‡¶ø‡¶ï‡¶ø‡¶â ‚Ä¢ ‡ß¨‡ß¶ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü</li>
              <li>üìä ‡¶≤‡¶æ‡¶á‡¶≠ ‡¶≤‡¶ø‡¶°‡¶æ‡¶∞‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶ì ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶æ‡¶≤‡¶ø‡¶ü‡¶ø‡¶ï‡ßç‡¶∏</li>
              <li>üèÜ ‡¶∏‡ßá‡¶∞‡¶æ ‡ßß‡ß¶‡ß¶ ‡¶ú‡¶®‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶ï‡¶∞‡ßç‡¶∑‡¶£‡ßÄ‡¶Ø‡¶º ‡¶™‡ßÅ‡¶∞‡¶∏‡ßç‡¶ï‡¶æ‡¶∞</li>
            </ul>
          </div>
        </div>
      </Section>

      {/* Previous solves */}
      <Section id="previous" title="‡¶¨‡¶ø‡¶ó‡¶§ ‡¶¨‡¶õ‡¶∞‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡¶ì ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®" subtitle="‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®‡ßá‡¶∞ ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶ì ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®‡•§">
        <div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-4">
          {PREVIOUS_SOLVES.map((ps) => (
            <div key={ps.id} className="rounded-xl border border-slate-800 bg-slate-900 p-4 hover:shadow-lg transition">
              <h3 className="font-semibold text-slate-50">{ps.exam}</h3>
              <p className="mt-1 text-sm text-slate-400">{ps.year} ‚Ä¢ {ps.questions}‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®</p>
              <div className="mt-4 flex gap-2">
                <button className="btn-secondary">‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®</button>
              </div>
            </div>
          ))}
        </div>
      </Section>
   
      {/* Blog */}
      <Section id="blog" title="‡¶ü‡¶ø‡¶™‡¶∏ ‡¶ì ‡¶¨‡ßç‡¶≤‡¶ó" subtitle="‡¶∏‡¶†‡¶ø‡¶ï ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ü‡ßá‡¶ú‡¶ø, ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶®‡¶æ ‡¶ì ‡¶Ö‡¶®‡ßÅ‡¶™‡ßç‡¶∞‡ßá‡¶∞‡¶£‡¶æ‡¶Æ‡ßÇ‡¶≤‡¶ï ‡¶≤‡ßá‡¶ñ‡¶æ‡•§">
        <div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-4">
          {POSTS.map((p) => (
            <div key={p.id} className="rounded-xl border border-slate-800 bg-slate-900 p-4 hover:shadow-lg transition">
              <h3 className="font-semibold text-slate-50">{p.title}</h3>
              <p className="mt-1 text-sm text-slate-400">‡¶≤‡ßá‡¶ñ‡¶ï: {p.author} ‚Ä¢ {p.read} ‡¶™‡¶°‡¶º‡¶æ</p>
              <button className="mt-4 btn-secondary">‡¶è‡¶ñ‡¶®‡¶á ‡¶™‡ßú‡ßÅ‡¶®</button>
            </div>
          ))}
        </div>
      </Section>

      {/* Subscribe CTA */}
      <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 my-16">
        <div className="rounded-2xl border border-slate-800 bg-gradient-to-br from-slate-900 to-slate-800 p-8 text-center">
          <p className="text-sm font-semibold text-slate-50">{`‡¶≠‡¶∞‡ßç‡¶§‡¶ø ‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶™‡ßç‡¶§‡¶ø, ‡¶≤‡¶æ‡¶á‡¶≠ ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ì ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶ü‡¶ø‡¶™‡¶∏ ‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶á‡¶®‡¶¨‡¶ï‡ßç‡¶∏‡ßá‡•§`}</p>
        
          <div className="mt-4 flex flex-col sm:flex-row gap-3 justify-center">
            <input type="email" placeholder="‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®" className="w-full sm:w-80 rounded-lg border border-slate-700 bg-slate-800 text-slate-300 placeholder:text-slate-500 px-4 py-3 text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500" />
            <button className="btn-primary-lg">‡¶∏‡¶æ‡¶¨‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶æ‡¶á‡¶¨ ‡¶ï‡¶∞‡ßÅ‡¶®</button>
          </div>
        </div>
      </div>


    </>
  );
}